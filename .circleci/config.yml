version: 2
jobs:
  test:
    working_directory: ~/repo
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: postgres
          PGPASSWORD: postgres

      - image: postgres
        environment:
          POSTGRES_DB: coffee_break_test 
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    steps:
      - checkout

      - restore_cache:
          keys:
           - gem-cache-v1-{{ checksum "Gemfile.lock" }}
           - gem-cache-v1

      - restore_cache:
          name: Restore yarn cache
          keys:
            - yarn-cache-v1-{{ checksum "yarn.lock" }}
            - yarn-cache-v1

      - run:
          name: Bundle Install
          command: |
            gem install bundler
            bundle config set path 'vendor/bundle'
            bundle install

      - run:
          name: Install yarn dependencies
          command: yarn install --ignore-engines --frozen-lockfile

      - run:
          name: Precompile assets
          command: RAILS_ENV=test bundle exec rails webpacker:compile

      - save_cache:
          name: Save gem cache
          key: gem-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/vendor/bundle

      - save_cache:
          name: Save yarn cache
          key: yarn-cache-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: Rails Test
          command: bundle exec rake

      - store_test_results:
          path: test-results

workflows:
  version: 2
  build_and_test:
    jobs:
      - test
